/*
User Management BFF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
	"time"
)

// checks if the SecuritySettingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecuritySettingResponse{}

// SecuritySettingResponse struct for SecuritySettingResponse
type SecuritySettingResponse struct {
	Is2FAEnabled *bool `json:"is2FAEnabled,omitempty"`
	KycStatus *string `json:"kycStatus,omitempty"`
	RiskLevel *string `json:"riskLevel,omitempty"`
	WithdrawalWhitelist []string `json:"withdrawalWhitelist,omitempty"`
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewSecuritySettingResponse instantiates a new SecuritySettingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecuritySettingResponse() *SecuritySettingResponse {
	this := SecuritySettingResponse{}
	return &this
}

// NewSecuritySettingResponseWithDefaults instantiates a new SecuritySettingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecuritySettingResponseWithDefaults() *SecuritySettingResponse {
	this := SecuritySettingResponse{}
	return &this
}

// GetIs2FAEnabled returns the Is2FAEnabled field value if set, zero value otherwise.
func (o *SecuritySettingResponse) GetIs2FAEnabled() bool {
	if o == nil || IsNil(o.Is2FAEnabled) {
		var ret bool
		return ret
	}
	return *o.Is2FAEnabled
}

// GetIs2FAEnabledOk returns a tuple with the Is2FAEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySettingResponse) GetIs2FAEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Is2FAEnabled) {
		return nil, false
	}
	return o.Is2FAEnabled, true
}

// HasIs2FAEnabled returns a boolean if a field has been set.
func (o *SecuritySettingResponse) HasIs2FAEnabled() bool {
	if o != nil && !IsNil(o.Is2FAEnabled) {
		return true
	}

	return false
}

// SetIs2FAEnabled gets a reference to the given bool and assigns it to the Is2FAEnabled field.
func (o *SecuritySettingResponse) SetIs2FAEnabled(v bool) {
	o.Is2FAEnabled = &v
}

// GetKycStatus returns the KycStatus field value if set, zero value otherwise.
func (o *SecuritySettingResponse) GetKycStatus() string {
	if o == nil || IsNil(o.KycStatus) {
		var ret string
		return ret
	}
	return *o.KycStatus
}

// GetKycStatusOk returns a tuple with the KycStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySettingResponse) GetKycStatusOk() (*string, bool) {
	if o == nil || IsNil(o.KycStatus) {
		return nil, false
	}
	return o.KycStatus, true
}

// HasKycStatus returns a boolean if a field has been set.
func (o *SecuritySettingResponse) HasKycStatus() bool {
	if o != nil && !IsNil(o.KycStatus) {
		return true
	}

	return false
}

// SetKycStatus gets a reference to the given string and assigns it to the KycStatus field.
func (o *SecuritySettingResponse) SetKycStatus(v string) {
	o.KycStatus = &v
}

// GetRiskLevel returns the RiskLevel field value if set, zero value otherwise.
func (o *SecuritySettingResponse) GetRiskLevel() string {
	if o == nil || IsNil(o.RiskLevel) {
		var ret string
		return ret
	}
	return *o.RiskLevel
}

// GetRiskLevelOk returns a tuple with the RiskLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySettingResponse) GetRiskLevelOk() (*string, bool) {
	if o == nil || IsNil(o.RiskLevel) {
		return nil, false
	}
	return o.RiskLevel, true
}

// HasRiskLevel returns a boolean if a field has been set.
func (o *SecuritySettingResponse) HasRiskLevel() bool {
	if o != nil && !IsNil(o.RiskLevel) {
		return true
	}

	return false
}

// SetRiskLevel gets a reference to the given string and assigns it to the RiskLevel field.
func (o *SecuritySettingResponse) SetRiskLevel(v string) {
	o.RiskLevel = &v
}

// GetWithdrawalWhitelist returns the WithdrawalWhitelist field value if set, zero value otherwise.
func (o *SecuritySettingResponse) GetWithdrawalWhitelist() []string {
	if o == nil || IsNil(o.WithdrawalWhitelist) {
		var ret []string
		return ret
	}
	return o.WithdrawalWhitelist
}

// GetWithdrawalWhitelistOk returns a tuple with the WithdrawalWhitelist field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySettingResponse) GetWithdrawalWhitelistOk() ([]string, bool) {
	if o == nil || IsNil(o.WithdrawalWhitelist) {
		return nil, false
	}
	return o.WithdrawalWhitelist, true
}

// HasWithdrawalWhitelist returns a boolean if a field has been set.
func (o *SecuritySettingResponse) HasWithdrawalWhitelist() bool {
	if o != nil && !IsNil(o.WithdrawalWhitelist) {
		return true
	}

	return false
}

// SetWithdrawalWhitelist gets a reference to the given []string and assigns it to the WithdrawalWhitelist field.
func (o *SecuritySettingResponse) SetWithdrawalWhitelist(v []string) {
	o.WithdrawalWhitelist = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *SecuritySettingResponse) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SecuritySettingResponse) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *SecuritySettingResponse) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *SecuritySettingResponse) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o SecuritySettingResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecuritySettingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Is2FAEnabled) {
		toSerialize["is2FAEnabled"] = o.Is2FAEnabled
	}
	if !IsNil(o.KycStatus) {
		toSerialize["kycStatus"] = o.KycStatus
	}
	if !IsNil(o.RiskLevel) {
		toSerialize["riskLevel"] = o.RiskLevel
	}
	if !IsNil(o.WithdrawalWhitelist) {
		toSerialize["withdrawalWhitelist"] = o.WithdrawalWhitelist
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableSecuritySettingResponse struct {
	value *SecuritySettingResponse
	isSet bool
}

func (v NullableSecuritySettingResponse) Get() *SecuritySettingResponse {
	return v.value
}

func (v *NullableSecuritySettingResponse) Set(val *SecuritySettingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSecuritySettingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSecuritySettingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecuritySettingResponse(val *SecuritySettingResponse) *NullableSecuritySettingResponse {
	return &NullableSecuritySettingResponse{value: val, isSet: true}
}

func (v NullableSecuritySettingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecuritySettingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


