/*
User Management BFF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UserCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserCreateRequest{}

// UserCreateRequest struct for UserCreateRequest
type UserCreateRequest struct {
	Username string `json:"username"`
	Email string `json:"email"`
	Role string `json:"role"`
	HashedPwd string `json:"hashed_pwd"`
}

type _UserCreateRequest UserCreateRequest

// NewUserCreateRequest instantiates a new UserCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserCreateRequest(username string, email string, role string, hashedPwd string) *UserCreateRequest {
	this := UserCreateRequest{}
	this.Username = username
	this.Email = email
	this.Role = role
	this.HashedPwd = hashedPwd
	return &this
}

// NewUserCreateRequestWithDefaults instantiates a new UserCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserCreateRequestWithDefaults() *UserCreateRequest {
	this := UserCreateRequest{}
	return &this
}

// GetUsername returns the Username field value
func (o *UserCreateRequest) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *UserCreateRequest) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *UserCreateRequest) SetUsername(v string) {
	o.Username = v
}

// GetEmail returns the Email field value
func (o *UserCreateRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *UserCreateRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *UserCreateRequest) SetEmail(v string) {
	o.Email = v
}

// GetRole returns the Role field value
func (o *UserCreateRequest) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *UserCreateRequest) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *UserCreateRequest) SetRole(v string) {
	o.Role = v
}

// GetHashedPwd returns the HashedPwd field value
func (o *UserCreateRequest) GetHashedPwd() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HashedPwd
}

// GetHashedPwdOk returns a tuple with the HashedPwd field value
// and a boolean to check if the value has been set.
func (o *UserCreateRequest) GetHashedPwdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HashedPwd, true
}

// SetHashedPwd sets field value
func (o *UserCreateRequest) SetHashedPwd(v string) {
	o.HashedPwd = v
}

func (o UserCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["username"] = o.Username
	toSerialize["email"] = o.Email
	toSerialize["role"] = o.Role
	toSerialize["hashed_pwd"] = o.HashedPwd
	return toSerialize, nil
}

func (o *UserCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"username",
		"email",
		"role",
		"hashed_pwd",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUserCreateRequest := _UserCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUserCreateRequest)

	if err != nil {
		return err
	}

	*o = UserCreateRequest(varUserCreateRequest)

	return err
}

type NullableUserCreateRequest struct {
	value *UserCreateRequest
	isSet bool
}

func (v NullableUserCreateRequest) Get() *UserCreateRequest {
	return v.value
}

func (v *NullableUserCreateRequest) Set(val *UserCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserCreateRequest(val *UserCreateRequest) *NullableUserCreateRequest {
	return &NullableUserCreateRequest{value: val, isSet: true}
}

func (v NullableUserCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


