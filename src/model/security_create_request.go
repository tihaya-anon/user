/*
User Management BFF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SecurityCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SecurityCreateRequest{}

// SecurityCreateRequest struct for SecurityCreateRequest
type SecurityCreateRequest struct {
	Is2FAEnabled bool `json:"is2FAEnabled"`
	KycStatus string `json:"kycStatus"`
	RiskLevel string `json:"riskLevel"`
	WithdrawalWhitelist []string `json:"withdrawalWhitelist"`
}

type _SecurityCreateRequest SecurityCreateRequest

// NewSecurityCreateRequest instantiates a new SecurityCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecurityCreateRequest(is2FAEnabled bool, kycStatus string, riskLevel string, withdrawalWhitelist []string) *SecurityCreateRequest {
	this := SecurityCreateRequest{}
	this.Is2FAEnabled = is2FAEnabled
	this.KycStatus = kycStatus
	this.RiskLevel = riskLevel
	this.WithdrawalWhitelist = withdrawalWhitelist
	return &this
}

// NewSecurityCreateRequestWithDefaults instantiates a new SecurityCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecurityCreateRequestWithDefaults() *SecurityCreateRequest {
	this := SecurityCreateRequest{}
	return &this
}

// GetIs2FAEnabled returns the Is2FAEnabled field value
func (o *SecurityCreateRequest) GetIs2FAEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Is2FAEnabled
}

// GetIs2FAEnabledOk returns a tuple with the Is2FAEnabled field value
// and a boolean to check if the value has been set.
func (o *SecurityCreateRequest) GetIs2FAEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Is2FAEnabled, true
}

// SetIs2FAEnabled sets field value
func (o *SecurityCreateRequest) SetIs2FAEnabled(v bool) {
	o.Is2FAEnabled = v
}

// GetKycStatus returns the KycStatus field value
func (o *SecurityCreateRequest) GetKycStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KycStatus
}

// GetKycStatusOk returns a tuple with the KycStatus field value
// and a boolean to check if the value has been set.
func (o *SecurityCreateRequest) GetKycStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KycStatus, true
}

// SetKycStatus sets field value
func (o *SecurityCreateRequest) SetKycStatus(v string) {
	o.KycStatus = v
}

// GetRiskLevel returns the RiskLevel field value
func (o *SecurityCreateRequest) GetRiskLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RiskLevel
}

// GetRiskLevelOk returns a tuple with the RiskLevel field value
// and a boolean to check if the value has been set.
func (o *SecurityCreateRequest) GetRiskLevelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RiskLevel, true
}

// SetRiskLevel sets field value
func (o *SecurityCreateRequest) SetRiskLevel(v string) {
	o.RiskLevel = v
}

// GetWithdrawalWhitelist returns the WithdrawalWhitelist field value
func (o *SecurityCreateRequest) GetWithdrawalWhitelist() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.WithdrawalWhitelist
}

// GetWithdrawalWhitelistOk returns a tuple with the WithdrawalWhitelist field value
// and a boolean to check if the value has been set.
func (o *SecurityCreateRequest) GetWithdrawalWhitelistOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WithdrawalWhitelist, true
}

// SetWithdrawalWhitelist sets field value
func (o *SecurityCreateRequest) SetWithdrawalWhitelist(v []string) {
	o.WithdrawalWhitelist = v
}

func (o SecurityCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SecurityCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["is2FAEnabled"] = o.Is2FAEnabled
	toSerialize["kycStatus"] = o.KycStatus
	toSerialize["riskLevel"] = o.RiskLevel
	toSerialize["withdrawalWhitelist"] = o.WithdrawalWhitelist
	return toSerialize, nil
}

func (o *SecurityCreateRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"is2FAEnabled",
		"kycStatus",
		"riskLevel",
		"withdrawalWhitelist",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSecurityCreateRequest := _SecurityCreateRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSecurityCreateRequest)

	if err != nil {
		return err
	}

	*o = SecurityCreateRequest(varSecurityCreateRequest)

	return err
}

type NullableSecurityCreateRequest struct {
	value *SecurityCreateRequest
	isSet bool
}

func (v NullableSecurityCreateRequest) Get() *SecurityCreateRequest {
	return v.value
}

func (v *NullableSecurityCreateRequest) Set(val *SecurityCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSecurityCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSecurityCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecurityCreateRequest(val *SecurityCreateRequest) *NullableSecurityCreateRequest {
	return &NullableSecurityCreateRequest{value: val, isSet: true}
}

func (v NullableSecurityCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecurityCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


