/*
User Management BFF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
	"time"
)

// checks if the PermissionListResponsePermissionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionListResponsePermissionsInner{}

// PermissionListResponsePermissionsInner struct for PermissionListResponsePermissionsInner
type PermissionListResponsePermissionsInner struct {
	Permission *string `json:"permission,omitempty"`
	Granted *bool `json:"granted,omitempty"`
	GrantedBy *int64 `json:"granted_by,omitempty"`
	GrantedAt *time.Time `json:"granted_at,omitempty"`
	Comment *string `json:"comment,omitempty"`
}

// NewPermissionListResponsePermissionsInner instantiates a new PermissionListResponsePermissionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionListResponsePermissionsInner() *PermissionListResponsePermissionsInner {
	this := PermissionListResponsePermissionsInner{}
	return &this
}

// NewPermissionListResponsePermissionsInnerWithDefaults instantiates a new PermissionListResponsePermissionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionListResponsePermissionsInnerWithDefaults() *PermissionListResponsePermissionsInner {
	this := PermissionListResponsePermissionsInner{}
	return &this
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *PermissionListResponsePermissionsInner) GetPermission() string {
	if o == nil || IsNil(o.Permission) {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionListResponsePermissionsInner) GetPermissionOk() (*string, bool) {
	if o == nil || IsNil(o.Permission) {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *PermissionListResponsePermissionsInner) HasPermission() bool {
	if o != nil && !IsNil(o.Permission) {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *PermissionListResponsePermissionsInner) SetPermission(v string) {
	o.Permission = &v
}

// GetGranted returns the Granted field value if set, zero value otherwise.
func (o *PermissionListResponsePermissionsInner) GetGranted() bool {
	if o == nil || IsNil(o.Granted) {
		var ret bool
		return ret
	}
	return *o.Granted
}

// GetGrantedOk returns a tuple with the Granted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionListResponsePermissionsInner) GetGrantedOk() (*bool, bool) {
	if o == nil || IsNil(o.Granted) {
		return nil, false
	}
	return o.Granted, true
}

// HasGranted returns a boolean if a field has been set.
func (o *PermissionListResponsePermissionsInner) HasGranted() bool {
	if o != nil && !IsNil(o.Granted) {
		return true
	}

	return false
}

// SetGranted gets a reference to the given bool and assigns it to the Granted field.
func (o *PermissionListResponsePermissionsInner) SetGranted(v bool) {
	o.Granted = &v
}

// GetGrantedBy returns the GrantedBy field value if set, zero value otherwise.
func (o *PermissionListResponsePermissionsInner) GetGrantedBy() int64 {
	if o == nil || IsNil(o.GrantedBy) {
		var ret int64
		return ret
	}
	return *o.GrantedBy
}

// GetGrantedByOk returns a tuple with the GrantedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionListResponsePermissionsInner) GetGrantedByOk() (*int64, bool) {
	if o == nil || IsNil(o.GrantedBy) {
		return nil, false
	}
	return o.GrantedBy, true
}

// HasGrantedBy returns a boolean if a field has been set.
func (o *PermissionListResponsePermissionsInner) HasGrantedBy() bool {
	if o != nil && !IsNil(o.GrantedBy) {
		return true
	}

	return false
}

// SetGrantedBy gets a reference to the given int64 and assigns it to the GrantedBy field.
func (o *PermissionListResponsePermissionsInner) SetGrantedBy(v int64) {
	o.GrantedBy = &v
}

// GetGrantedAt returns the GrantedAt field value if set, zero value otherwise.
func (o *PermissionListResponsePermissionsInner) GetGrantedAt() time.Time {
	if o == nil || IsNil(o.GrantedAt) {
		var ret time.Time
		return ret
	}
	return *o.GrantedAt
}

// GetGrantedAtOk returns a tuple with the GrantedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionListResponsePermissionsInner) GetGrantedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.GrantedAt) {
		return nil, false
	}
	return o.GrantedAt, true
}

// HasGrantedAt returns a boolean if a field has been set.
func (o *PermissionListResponsePermissionsInner) HasGrantedAt() bool {
	if o != nil && !IsNil(o.GrantedAt) {
		return true
	}

	return false
}

// SetGrantedAt gets a reference to the given time.Time and assigns it to the GrantedAt field.
func (o *PermissionListResponsePermissionsInner) SetGrantedAt(v time.Time) {
	o.GrantedAt = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *PermissionListResponsePermissionsInner) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PermissionListResponsePermissionsInner) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *PermissionListResponsePermissionsInner) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *PermissionListResponsePermissionsInner) SetComment(v string) {
	o.Comment = &v
}

func (o PermissionListResponsePermissionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionListResponsePermissionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Permission) {
		toSerialize["permission"] = o.Permission
	}
	if !IsNil(o.Granted) {
		toSerialize["granted"] = o.Granted
	}
	if !IsNil(o.GrantedBy) {
		toSerialize["granted_by"] = o.GrantedBy
	}
	if !IsNil(o.GrantedAt) {
		toSerialize["granted_at"] = o.GrantedAt
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	return toSerialize, nil
}

type NullablePermissionListResponsePermissionsInner struct {
	value *PermissionListResponsePermissionsInner
	isSet bool
}

func (v NullablePermissionListResponsePermissionsInner) Get() *PermissionListResponsePermissionsInner {
	return v.value
}

func (v *NullablePermissionListResponsePermissionsInner) Set(val *PermissionListResponsePermissionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionListResponsePermissionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionListResponsePermissionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionListResponsePermissionsInner(val *PermissionListResponsePermissionsInner) *NullablePermissionListResponsePermissionsInner {
	return &NullablePermissionListResponsePermissionsInner{value: val, isSet: true}
}

func (v NullablePermissionListResponsePermissionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionListResponsePermissionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


