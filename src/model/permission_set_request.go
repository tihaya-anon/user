/*
User Management BFF API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package model

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PermissionSetRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PermissionSetRequest{}

// PermissionSetRequest struct for PermissionSetRequest
type PermissionSetRequest struct {
	Permission string `json:"permission"`
	Granted bool `json:"granted"`
	GrantedBy int64 `json:"granted_by"`
	Comment string `json:"comment"`
}

type _PermissionSetRequest PermissionSetRequest

// NewPermissionSetRequest instantiates a new PermissionSetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPermissionSetRequest(permission string, granted bool, grantedBy int64, comment string) *PermissionSetRequest {
	this := PermissionSetRequest{}
	this.Permission = permission
	this.Granted = granted
	this.GrantedBy = grantedBy
	this.Comment = comment
	return &this
}

// NewPermissionSetRequestWithDefaults instantiates a new PermissionSetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPermissionSetRequestWithDefaults() *PermissionSetRequest {
	this := PermissionSetRequest{}
	return &this
}

// GetPermission returns the Permission field value
func (o *PermissionSetRequest) GetPermission() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
func (o *PermissionSetRequest) GetPermissionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permission, true
}

// SetPermission sets field value
func (o *PermissionSetRequest) SetPermission(v string) {
	o.Permission = v
}

// GetGranted returns the Granted field value
func (o *PermissionSetRequest) GetGranted() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Granted
}

// GetGrantedOk returns a tuple with the Granted field value
// and a boolean to check if the value has been set.
func (o *PermissionSetRequest) GetGrantedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Granted, true
}

// SetGranted sets field value
func (o *PermissionSetRequest) SetGranted(v bool) {
	o.Granted = v
}

// GetGrantedBy returns the GrantedBy field value
func (o *PermissionSetRequest) GetGrantedBy() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.GrantedBy
}

// GetGrantedByOk returns a tuple with the GrantedBy field value
// and a boolean to check if the value has been set.
func (o *PermissionSetRequest) GetGrantedByOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GrantedBy, true
}

// SetGrantedBy sets field value
func (o *PermissionSetRequest) SetGrantedBy(v int64) {
	o.GrantedBy = v
}

// GetComment returns the Comment field value
func (o *PermissionSetRequest) GetComment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Comment
}

// GetCommentOk returns a tuple with the Comment field value
// and a boolean to check if the value has been set.
func (o *PermissionSetRequest) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comment, true
}

// SetComment sets field value
func (o *PermissionSetRequest) SetComment(v string) {
	o.Comment = v
}

func (o PermissionSetRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PermissionSetRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["permission"] = o.Permission
	toSerialize["granted"] = o.Granted
	toSerialize["granted_by"] = o.GrantedBy
	toSerialize["comment"] = o.Comment
	return toSerialize, nil
}

func (o *PermissionSetRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"permission",
		"granted",
		"granted_by",
		"comment",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPermissionSetRequest := _PermissionSetRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPermissionSetRequest)

	if err != nil {
		return err
	}

	*o = PermissionSetRequest(varPermissionSetRequest)

	return err
}

type NullablePermissionSetRequest struct {
	value *PermissionSetRequest
	isSet bool
}

func (v NullablePermissionSetRequest) Get() *PermissionSetRequest {
	return v.value
}

func (v *NullablePermissionSetRequest) Set(val *PermissionSetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePermissionSetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePermissionSetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePermissionSetRequest(val *PermissionSetRequest) *NullablePermissionSetRequest {
	return &NullablePermissionSetRequest{value: val, isSet: true}
}

func (v NullablePermissionSetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePermissionSetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


